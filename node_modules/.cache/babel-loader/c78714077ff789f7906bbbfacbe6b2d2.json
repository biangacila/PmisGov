{"ast":null,"code":"import _classCallCheck from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/biangacila/reactprojects/easi-fleet-web/src/container/con-media-streaming.js\";\nimport React from 'react';\nimport ReactHLS from 'react-hls';\nimport ReactPlayer from \"react-player\";\n\nvar MediaStreaming =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MediaStreaming, _React$Component);\n\n  function MediaStreaming(props) {\n    _classCallCheck(this, MediaStreaming);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MediaStreaming).call(this, props)); //this.video = window.document.querySelector(\"#videoElement\");\n  }\n\n  _createClass(MediaStreaming, [{\n    key: \"handleVideo\",\n    value: function handleVideo(stream) {// this.video.src = (window.URL || window.webkitURL).createObjectURL(stream);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var $URL = \"./\";\n\n      function playVideo(src, el) {\n        var swfPlayer = new SWFPlayer(\"container\", el, \"520\", \"360\", \"12312.jpg\");\n        swfPlayer.reload(src);\n      }\n\n      var SWFPlayer = function SWFPlayer(_parent_id, _player_id, _width, _height, _poster) {\n        var parent_id = _parent_id;\n        var player_id = _player_id;\n        var width = _width;\n        var height = _height;\n        var poster = _poster;\n\n        function createPlayer(src) {\n          var swfVersionStr = \"11.1.0\";\n          var xiSwfUrlStr = $URL + \"expressInstall.swf\";\n          var flashvars = {\n            src: src,\n            autoPlay: \"true\",\n            verbose: \"true\",\n            //                volume: \"0\",\n            controlBarAutoHide: \"true\",\n            controlBarPosition: \"bottom\",\n            poster: poster,\n            plugin_hls: $URL + \"HLSDynamicPlugin.swf\",\n            VolumeMenuButton: $URL + \"HLSDynamicPlugin.swf\",\n            javascriptCallbackFunction: \"onJavaScriptBridgeCreated\"\n          };\n          flashvars.src = src;\n          flashvars.autoPlay = \"true\";\n          var params = {\n            allowFullScreen: \"true\"\n          };\n          var attributes = {};\n          attributes.mode = \"transparent\";\n          attributes.id = player_id;\n          attributes.name = player_id; //attributes.align = \"middle\";\n\n          swfobject.embedSWF($URL + \"StrobeMediaPlayback.swf\", player_id, width, height, swfVersionStr, xiSwfUrlStr, flashvars, params, attributes); //            swfobject.createCSS(\".container\", \"display:block;text-align:left;background-color: #3a9425;\"); //背景颜色控制\n        }\n\n        ;\n\n        this.reload = function (src) {\n          createPlayer(src);\n        };\n      };\n\n      function completeFunc(time, playerId) {\n        //var player = document.getElementById(playerId);\n        alert(\"!!!\");\n      }\n\n      function onCurrentTimeChange(time, playerId) {\n        document.getElementById(\"currentTime\").innerHTML = time;\n      }\n\n      function onDurationChange(time, playerId) {\n        document.getElementById(\"duration\").innerHTML = time;\n        console.log('time :: ' + time);\n      }\n\n      var player = null;\n\n      function onJavaScriptBridgeCreated(playerId) {\n        if (player == null) {\n          player = document.getElementById(\"video-player\"); // Add event listeners that will update the\n\n          player.addEventListener(\"currentTimeChange\", \"onCurrentTimeChange\");\n          player.addEventListener(\"durationChange\", \"onDurationChange\");\n          player.addEventListener(\"complete\", \"completeFunc\");\n        }\n      }\n\n      function onComplete() {\n        console.log('Complete111111!');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(ReactPlayer, {\n        playing: true,\n        autoPlay: true,\n        url: [{\n          src: 'rtmp://156.38.129.58/app/live',\n          type: 'rtmp/mp4'\n        }],\n        width: \"300\",\n        height: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flowplayer\",\n        \"data-rtmp\": \"rtmp://156.38.129.58/app/live\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MediaStreaming;\n}(React.Component);\n\nexport { MediaStreaming as default };","map":{"version":3,"sources":["/home/biangacila/reactprojects/easi-fleet-web/src/container/con-media-streaming.js"],"names":["React","ReactHLS","ReactPlayer","MediaStreaming","props","stream","$URL","playVideo","src","el","swfPlayer","SWFPlayer","reload","_parent_id","_player_id","_width","_height","_poster","parent_id","player_id","width","height","poster","createPlayer","swfVersionStr","xiSwfUrlStr","flashvars","autoPlay","verbose","controlBarAutoHide","controlBarPosition","plugin_hls","VolumeMenuButton","javascriptCallbackFunction","params","allowFullScreen","attributes","mode","id","name","swfobject","embedSWF","completeFunc","time","playerId","alert","onCurrentTimeChange","document","getElementById","innerHTML","onDurationChange","console","log","player","onJavaScriptBridgeCreated","addEventListener","onComplete","type","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactHLS from 'react-hls';\nimport ReactPlayer from \"react-player\";\n\nexport default class MediaStreaming extends React.Component{\n    constructor(props){\n        super(props);\n\n        //this.video = window.document.querySelector(\"#videoElement\");\n\n    }\n    handleVideo(stream) {\n       // this.video.src = (window.URL || window.webkitURL).createObjectURL(stream);\n    }\n\n    render() {\n\n        var $URL = \"./\";\n        function playVideo(src, el) {\n            var swfPlayer = new SWFPlayer(\"container\", el, \"520\", \"360\", \"12312.jpg\");\n            swfPlayer.reload(src);\n        }\n        var SWFPlayer = function (_parent_id, _player_id, _width, _height, _poster) {\n            var parent_id = _parent_id;\n            var player_id = _player_id;\n            var width = _width;\n            var height = _height;\n            var poster = _poster;\n            function createPlayer(src) {\n                var swfVersionStr = \"11.1.0\";\n                var xiSwfUrlStr = $URL + \"expressInstall.swf\";\n                var flashvars = {\n                    src: src,\n                    autoPlay: \"true\",\n                    verbose: \"true\",\n//                volume: \"0\",\n                    controlBarAutoHide: \"true\",\n                    controlBarPosition: \"bottom\",\n                    poster: poster,\n                    plugin_hls: $URL + \"HLSDynamicPlugin.swf\",\n                    VolumeMenuButton: $URL + \"HLSDynamicPlugin.swf\",\n                    javascriptCallbackFunction: \"onJavaScriptBridgeCreated\"\n                };\n                flashvars.src = src;\n                flashvars.autoPlay = \"true\";\n                var params = {\n                    allowFullScreen: \"true\",\n                };\n                var attributes = {};\n                attributes.mode = \"transparent\";\n                attributes.id = player_id;\n                attributes.name = player_id;\n                //attributes.align = \"middle\";\n                swfobject.embedSWF($URL + \"StrobeMediaPlayback.swf\", player_id, width, height, swfVersionStr, xiSwfUrlStr, flashvars, params, attributes);\n//            swfobject.createCSS(\".container\", \"display:block;text-align:left;background-color: #3a9425;\"); //背景颜色控制\n            };\n            this.reload = function (src) {\n                createPlayer(src);\n            };\n        };\n        function completeFunc(time, playerId) {\n            //var player = document.getElementById(playerId);\n            alert(\"!!!\");\n        }\n        function onCurrentTimeChange(time, playerId)\n        {\n            document.getElementById(\"currentTime\").innerHTML = time;\n        }\n        function onDurationChange(time, playerId)\n        {\n            document.getElementById(\"duration\").innerHTML = time;\n            console.log('time :: '+time)\n        }\n        var player = null;\n        function onJavaScriptBridgeCreated(playerId)\n        {\n            if (player == null) {\n                player = document.getElementById(\"video-player\");\n                // Add event listeners that will update the\n                player.addEventListener(\"currentTimeChange\", \"onCurrentTimeChange\");\n                player.addEventListener(\"durationChange\", \"onDurationChange\");\n                player.addEventListener(\"complete\", \"completeFunc\");\n            }\n        }\n        function onComplete() {\n            console.log('Complete111111!')\n        }\n\n        return (\n            <div className=\"container\">\n\n\n                <ReactPlayer\n                    playing\n                    autoPlay={true}\n                    url={[\n                        {src: 'rtmp://156.38.129.58/app/live', type: 'rtmp/mp4'},\n                    ]}\n                    width=\"300\"\n                    height=\"200\"\n                />\n\n\n                <div className=\"flowplayer\" data-rtmp=\"rtmp://156.38.129.58/app/live\">\n\n                   {/* <video controls\n                           autoPlay={true}\n                           src=\"rtmp://156.38.129.58/app/live\"\n                           width=\"300\"\n                           height=\"200\">\n                        Sorry, your browser doesn't support embedded videos.\n                    </video>*/}\n\n                </div>\n\n                {/*<ReactHLS url={\"rtmp://156.38.129.58/app/live\"} autoplay={true}/>\n                <video controls\n                       muted\n                       src=\"rtmp://156.38.129.58/app/live\"\n                       width=\"300\"\n                       height=\"200\">\n                    Sorry, your browser doesn't support embedded videos.\n                </video>*/}\n                {/*<form id=\"player-form\">\n                    <div className=\"input-group url-control\">\n                        <input className=\"form-control\" id=\"player-src\" value=\"\"\n                               placeholder=\"rtmp://www.example.com/live/stream\"\n                               required=\"\" type=\"text\"/>\n                        <span className=\"input-group-btn\">\n<button type=\"submit\" className=\"btn btn-success\" id=\"player-start\">Play</button>\n</span>\n                    </div>\n                </form>\n\n                <div id=\"player-container\">\n                    <object type=\"application/x-shockwave-flash\" id=\"player\" data=\"/player/grindplayer/GrindPlayer.swf\"\n                            style={{\"visibility\": \"visible\"}} width=\"640\" height=\"480\">\n                        <param name=\"allowFullScreen\" value=\"true\" />\n                            <param name=\"allowScriptAccess\" value=\"always\"/>\n                            <param name=\"wmode\" value=\"opaque\"/>\n                            <param name=\"flashvars\"\n                                   value=\"autoPlay=true&amp;src=rtmp://156.38.129.58/app/live&amp;streamType=live&amp;scaleMode=letterbox\"/>\n                    </object>\n                    <div id=\"player-tip\" style={{\"display\": \"none\"}}></div>\n                </div>*/}\n            </div>\n    )\n    }\n    }\n\n"]},"metadata":{},"sourceType":"module"}