{"ast":null,"code":"import _regeneratorRuntime from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/biangacila/reactprojects/easi-fleet-web/src/component/common/adding-model.js\";\nimport React from 'react';\nimport { PostRequestHTTP, GetUserToken } from \"../../api/services\";\nimport { cleanInputUsername } from \"../../api/others\";\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport ModalBootsrap from './modal-bootstrap';\nimport AddingModelFilter from './adding-model-filter';\n\nvar AddingModel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddingModel, _React$Component);\n\n  function AddingModel(props) {\n    var _this2;\n\n    _classCallCheck(this, AddingModel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AddingModel).call(this, props));\n\n    _this2.getModelName = function () {\n      if (typeof _this2.state.ModelName === \"undefined\") {\n        return \"...\";\n      }\n\n      return _this2.state.ModelName;\n    };\n\n    _this2.handleInput = function (e, key) {\n      _this2.setState(_defineProperty({}, key, e.target.value)); //console.log(\"HandleInput > \",key,\" > \",e.target.value);\n\n    };\n\n    _this2.getValue = function (key) {\n      if (typeof _this2.state[key] === \"undefined\") {\n        return \"\";\n      }\n\n      return _this2.state[key];\n    };\n\n    _this2.renderFormInput = function () {\n      if (typeof _this2.state.MyModel === \"undefined\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"form\", {\n        onSubmit: _this2.SubmitNewEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, _this2.state.MyModel.map(function (row, index) {\n        if (typeof row.filter !== \"undefined\") {\n          if (row.filter) {\n            return React.createElement(AddingModelFilter, {\n              row: row,\n              handleInput: _this2.handleInput,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            });\n          }\n        }\n\n        return React.createElement(\"div\", {\n          className: \"form-group\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, row.desc), React.createElement(\"input\", {\n          type: row.type,\n          className: \"form-control\",\n          id: row.field,\n          \"aria-describedby\": row.field + \"Help\",\n          placeholder: row.placeholder,\n          required: row.required,\n          onChange: function onChange(e) {\n            return _this2.handleInput(e, row.field);\n          },\n          value: _this2.getValue(row.field),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }));\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"pull-right\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Submit\"));\n    };\n\n    _this2.viewSelectedModel = function (row) {\n      delete row.status;\n      delete row.date;\n      delete row.time;\n      delete row.orgdatetime;\n      delete row.id;\n\n      _this2.setState({\n        openclose: true,\n        dataView: row\n      });\n    };\n\n    _this2.editSelectedModel = function (row) {\n      alert(\"You are about Editing this!\");\n\n      _this2.setState({\n        editMode: true,\n        dataView: row\n      });\n    };\n\n    _this2.closeModal = function () {\n      _this2.setState({\n        openclose: false,\n        dataView: {}\n      });\n    };\n\n    _this2.open = function () {\n      _this2.setState({\n        openclose: true,\n        dataView: {}\n      });\n    };\n\n    _this2.renderList = function () {\n      if (_this2.state.List.length === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Empty List ...\");\n      }\n\n      console.log(\"F! --> \", _this2.state.List.length, \" > \", _this2.props.ListDisplayKey.length);\n      return React.createElement(\"table\", {\n        className: \"table\",\n        style: styles.tableList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, _this2.props.ListDisplayKey.map(function (item, index) {\n        console.log(\"F!!! --> \", item);\n        return React.createElement(\"th\", {\n          key: index + \"#\" + item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, item);\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"\\xA0\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, _this2.state.List.map(function (row, index) {\n        var _React$createElement, _React$createElement2, _React$createElement3;\n\n        console.log(\"F!!! --> \", row);\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, _this2.props.ListDisplayKey.map(function (item, index) {\n          var myItem = item.toLocaleLowerCase();\n          return React.createElement(\"td\", {\n            key: index + \"#\" + item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, row[myItem]);\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"a\", (_React$createElement = {\n          onClick: function onClick() {\n            alert(\"List view\");\n          },\n          className: \"glyphicon glyphicon-list clickMe\",\n          style: {\n            fontSize: 24,\n            color: \"blue\",\n            fontWeight: \"bold\"\n          }\n        }, _defineProperty(_React$createElement, \"onClick\", function onClick() {\n          return _this2.viewSelectedModel(row);\n        }), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"a\", (_React$createElement2 = {\n          onClick: function onClick() {\n            alert(\"List view\");\n          },\n          className: \"glyphicon glyphicon-pencil clickMe\",\n          style: {\n            fontSize: 24,\n            color: \"black\",\n            fontWeight: \"bold\"\n          }\n        }, _defineProperty(_React$createElement2, \"onClick\", function onClick() {\n          return _this2.editSelectedModel(row);\n        }), _defineProperty(_React$createElement2, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2)), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"a\", (_React$createElement3 = {\n          onClick: function onClick() {\n            alert(\"List view\");\n          },\n          className: \"glyphicon glyphicon-minus-sign clickMe\",\n          style: {\n            fontSize: 24,\n            color: \"red\",\n            fontWeight: \"bold\"\n          }\n        }, _defineProperty(_React$createElement3, \"onClick\", function onClick() {\n          return _this2.DeleteModel(row);\n        }), _defineProperty(_React$createElement3, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        }), _defineProperty(_React$createElement3, \"__self\", this), _React$createElement3))));\n      })));\n    };\n\n    _this2.state = {\n      OrgCode: \"\",\n      List: [],\n      openclose: false,\n      dataView: {},\n      editMode: false,\n      EntryData: null\n    };\n    _this2.fetchModelList = _this2.fetchModelList.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.SubmitNewEntry = _this2.SubmitNewEntry.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.DeleteModel = _this2.DeleteModel.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(AddingModel, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var user, tmp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  EntryData: _objectSpread({}, this.props)\n                });\n                console.log(\"componentDidMount > \", this.state.EntryData);\n                user = GetUserToken();\n                tmp = this.state;\n                tmp.OrgCode = user.OrgCode;\n                this.setState(tmp);\n                _context.next = 8;\n                return this.fetchModelList();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"fetchModelList\",\n    value: function () {\n      var _fetchModelList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this, endpoint, data, hub;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this = this;\n                endpoint = \"/crum\";\n                data = this.state;\n                hub = {\n                  OrgCode: this.state.OrgCode,\n                  ServiceName: \"select\",\n                  TableName: this.props.ModelName,\n                  Data: data,\n                  ParamUpdate: [],\n                  ParamConditions: []\n                };\n                console.log(\"fetchModelList > \", hub, endpoint);\n                _context2.next = 7;\n                return PostRequestHTTP(hub, endpoint, function (data) {\n                  var res = data.RESULT;\n                  console.log(\"submitForm response > \", data);\n\n                  _this.setState({\n                    List: res\n                  });\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function fetchModelList() {\n        return _fetchModelList.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"SubmitNewEntry\",\n    value: function () {\n      var _SubmitNewEntry = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var _this, endpoint, user, data, hub;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n                _this = this;\n                endpoint = \"/crum\";\n                user = GetUserToken();\n                data = this.state;\n                data.OrgCode = user.OrgCode;\n                hub = {\n                  ServiceName: \"insert\",\n                  TableName: this.props.ModelName,\n                  Data: data\n                };\n                console.log(\"SubmitNewEntry > \", hub, endpoint);\n                _context3.next = 10;\n                return PostRequestHTTP(hub, endpoint, function (data) {\n                  var res = data;\n                  console.log(\"SubmitNewEntry response > \", res);\n                  alert(\"Sucess! Entry add\");\n\n                  _this.fetchModelList();\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function SubmitNewEntry(_x) {\n        return _SubmitNewEntry.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"DeleteModel\",\n    value: function () {\n      var _DeleteModel = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(inObject) {\n        var text, paramCondition, i, row, val, _this, endpoint, data, hub;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                text = window.confirm(\"Are you sure that you want to delete this ?\");\n\n                if (text) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                paramCondition = [];\n\n                for (i in this.props.ListDeleteKey) {\n                  row = this.props.ListDeleteKey[i];\n                  val = inObject[row.field];\n                  paramCondition.push({\n                    Key: row.field,\n                    Val: val,\n                    DataType: row.type\n                  });\n                }\n\n                _this = this;\n                endpoint = \"/crum\";\n                data = this.state;\n                hub = {\n                  OrgCode: this.state.OrgCode,\n                  ServiceName: \"delete\",\n                  TableName: this.props.ModelName,\n                  Data: data,\n                  ParamUpdate: [],\n                  ParamConditions: paramCondition\n                };\n                console.log(\"DeleteModel > \", hub, endpoint);\n                _context4.next = 12;\n                return PostRequestHTTP(hub, endpoint, function (data) {\n                  var res = data.RESULT;\n                  console.log(\"DeleteModel response > \", data);\n\n                  _this.fetchModelList();\n                });\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function DeleteModel(_x2) {\n        return _DeleteModel.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: styles.newEntryTile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Available \", this.getModelName(), \" List\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), this.renderList()), React.createElement(\"div\", {\n        className: \"col col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: styles.newEntryTile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"New \", this.getModelName()), this.renderFormInput())), React.createElement(ModalBootsrap, {\n        openclose: this.state.openclose,\n        close: this.closeModal,\n        open: this.open,\n        data: this.state.dataView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddingModel;\n}(React.Component);\n\nexport { AddingModel as default };\nvar styles = {\n  newEntryTile: {\n    color: \"white\",\n    fontSize: 18,\n    fontweight: \"bold\",\n    textAlign: \"center\",\n    backgroundColor: \"gray\"\n  },\n  tableList: {}\n};","map":{"version":3,"sources":["/home/biangacila/reactprojects/easi-fleet-web/src/component/common/adding-model.js"],"names":["React","PostRequestHTTP","GetUserToken","cleanInputUsername","moment","Button","ModalBootsrap","AddingModelFilter","AddingModel","props","getModelName","state","ModelName","handleInput","e","key","setState","target","value","getValue","renderFormInput","MyModel","SubmitNewEntry","map","row","index","filter","desc","type","field","placeholder","required","viewSelectedModel","status","date","time","orgdatetime","id","openclose","dataView","editSelectedModel","alert","editMode","closeModal","open","renderList","List","length","console","log","ListDisplayKey","styles","tableList","item","myItem","toLocaleLowerCase","fontSize","color","fontWeight","DeleteModel","OrgCode","EntryData","fetchModelList","bind","user","tmp","_this","endpoint","data","hub","ServiceName","TableName","Data","ParamUpdate","ParamConditions","res","RESULT","preventDefault","inObject","text","window","confirm","paramCondition","i","ListDeleteKey","val","push","Key","Val","DataType","newEntryTile","Component","fontweight","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {PostRequestHTTP, GetUserToken} from \"../../api/services\";\nimport {cleanInputUsername} from \"../../api/others\";\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport ModalBootsrap from './modal-bootstrap';\nimport AddingModelFilter from './adding-model-filter';\n\nexport default class AddingModel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            OrgCode: \"\",\n            List: [],\n            openclose: false,\n            dataView: {},\n            editMode:false,\n            EntryData:null,\n        }\n        this.fetchModelList = this.fetchModelList.bind(this);\n        this.SubmitNewEntry = this.SubmitNewEntry.bind(this);\n        this.DeleteModel = this.DeleteModel.bind(this);\n    }\n\n    async componentDidMount() {\n\n        this.setState({EntryData: {...this.props}});\n        console.log(\"componentDidMount > \",this.state.EntryData);\n        const user = GetUserToken();\n        let tmp = this.state;\n        tmp.OrgCode = user.OrgCode;\n        this.setState(tmp);\n        await this.fetchModelList();\n    }\n\n    async fetchModelList() {\n        const _this = this;\n        let endpoint = \"/crum\";\n\n        let data = this.state;\n        const hub = {\n            OrgCode: this.state.OrgCode,\n            ServiceName: \"select\",\n            TableName: this.props.ModelName,\n            Data: data,\n            ParamUpdate: [],\n            ParamConditions: []\n        }\n\n\n        console.log(\"fetchModelList > \", hub, endpoint);\n\n        await PostRequestHTTP(hub, endpoint, function (data) {\n            const res = data.RESULT;\n            console.log(\"submitForm response > \", data);\n            _this.setState({List: res})\n\n        });\n    }\n\n    async SubmitNewEntry(e) {\n        e.preventDefault();\n        const _this = this;\n        let endpoint = \"/crum\";\n\n        const user = GetUserToken();\n\n        let data = this.state;\n        data.OrgCode = user.OrgCode;\n\n\n\n        const hub = {\n            ServiceName: \"insert\",\n            TableName: this.props.ModelName,\n            Data: data,\n\n        }\n\n        console.log(\"SubmitNewEntry > \", hub, endpoint);\n\n        await PostRequestHTTP(hub, endpoint, function (data) {\n            const res = data;\n            console.log(\"SubmitNewEntry response > \", res);\n            alert(\"Sucess! Entry add\");\n            _this.fetchModelList();\n\n        });\n    }\n\n    async DeleteModel(inObject) {\n        const text =window.confirm(\"Are you sure that you want to delete this ?\");\n        if(!text){\n            return;\n        }\n        let paramCondition = [];\n        for (let i in this.props.ListDeleteKey) {\n            const row =this.props.ListDeleteKey[i];\n            const val = inObject[row.field];\n            paramCondition.push({\n                Key: row.field,\n                Val: val,\n                DataType: row.type\n            });\n        }\n\n        const _this = this;\n        let endpoint = \"/crum\";\n\n        let data = this.state;\n        const hub = {\n            OrgCode: this.state.OrgCode,\n            ServiceName: \"delete\",\n            TableName: this.props.ModelName,\n            Data: data,\n            ParamUpdate: [],\n            ParamConditions: paramCondition\n        }\n\n        console.log(\"DeleteModel > \", hub, endpoint);\n\n        await PostRequestHTTP(hub, endpoint, function (data) {\n            const res = data.RESULT;\n            console.log(\"DeleteModel response > \", data);\n            _this.fetchModelList();\n\n        });\n\n    }\n\n    getModelName = () => {\n        if (typeof this.state.ModelName === \"undefined\") {\n            return \"...\"\n        }\n\n        return this.state.ModelName;\n    }\n    handleInput = (e, key) => {\n        this.setState({[key]: e.target.value});\n        //console.log(\"HandleInput > \",key,\" > \",e.target.value);\n    }\n    getValue = (key) => {\n        if (typeof this.state[key] === \"undefined\") {\n            return \"\"\n        }\n        return this.state[key];\n    }\n    renderFormInput = () => {\n\n        if (typeof this.state.MyModel === \"undefined\") {\n            return (<div/>)\n        }\n        return (\n            <form onSubmit={this.SubmitNewEntry}>\n                {this.state.MyModel.map((row, index) => {\n\n                    if(typeof row.filter !==\"undefined\"){\n                        if(row.filter){\n                            return(<AddingModelFilter row={row} handleInput={this.handleInput} />)\n                        }\n                    }\n\n                    return (\n                        <div className=\"form-group\" key={index}>\n                            <label>{row.desc}</label>\n                            <input\n                                type={row.type}\n                                className=\"form-control\"\n                                id={row.field}\n                                aria-describedby={row.field + \"Help\"}\n                                placeholder={row.placeholder}\n                                required={row.required}\n                                onChange={(e) => this.handleInput(e, row.field)}\n                                value={this.getValue(row.field)}\n                            />\n\n                        </div>\n                    )\n                })}\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className=\"pull-right\"\n                    type=\"submit\"\n                >\n                    Submit\n                </Button>\n            </form>\n        )\n    }\n    viewSelectedModel = (row) => {\n        delete row.status;\n        delete row.date;\n        delete row.time;\n        delete row.orgdatetime;\n        delete row.id;\n        this.setState({openclose: true, dataView: row});\n    }\n    editSelectedModel=(row)=>{\n        alert(\"You are about Editing this!\");\n        this.setState({editMode: true, dataView: row});\n    }\n    closeModal = () => {\n        this.setState({openclose: false, dataView: {}});\n    }\n    open = () => {\n        this.setState({openclose: true, dataView: {}});\n    }\n    renderList = () => {\n\n\n        if (this.state.List.length === 0) {\n            return (\n                <p>Empty List ...</p>\n            )\n        }\n\n        console.log(\"F! --> \", this.state.List.length, \" > \", this.props.ListDisplayKey.length);\n\n        return (\n            <table className={\"table\"} style={styles.tableList}>\n                <thead>\n\n                <tr>\n                    {this.props.ListDisplayKey.map((item, index) => {\n                        console.log(\"F!!! --> \", item);\n                        return (\n                            <th key={index + \"#\" + item}>{item}</th>\n                        )\n                    })}\n                    <th>&nbsp;</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.List.map((row, index) => {\n                    console.log(\"F!!! --> \", row);\n\n                    return (\n                        <tr>\n                            {this.props.ListDisplayKey.map((item, index) => {\n                                const myItem = item.toLocaleLowerCase();\n                                return (\n                                    <td key={index + \"#\" + item}>{row[myItem]}</td>\n                                )\n                            })}\n                            <td>\n                                <a onClick={() => {\n                                    alert(\"List view\");\n                                }} className=\"glyphicon glyphicon-list clickMe\"\n                                   style={{fontSize: 24, color: \"blue\", fontWeight: \"bold\"}}\n                                   onClick={() => this.viewSelectedModel(row)}\n                                />\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n                                <a onClick={() => {\n                                    alert(\"List view\");\n                                }} className=\"glyphicon glyphicon-pencil clickMe\"\n                                   style={{fontSize: 24, color: \"black\", fontWeight: \"bold\"}}\n                                   onClick={() => this.editSelectedModel(row)}\n                                />\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a onClick={() => {\n                                    alert(\"List view\");\n                                }} className=\"glyphicon glyphicon-minus-sign clickMe\"\n                                   style={{fontSize: 24, color: \"red\", fontWeight: \"bold\"}}\n                                   onClick={()=>this.DeleteModel(row)}\n                                />\n\n                            </td>\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <p>\n                    {/*JSON.stringify(this.state) */}\n                </p>\n                <div className=\"row\">\n                    <div className=\"col col-lg-6\">\n                        <p style={styles.newEntryTile}>Available {this.getModelName()} List</p>\n                        <br/>\n                        {this.renderList()}\n                    </div>\n                    <div className=\"col col-lg-4\">\n                        <p style={styles.newEntryTile}>New {this.getModelName()}</p>\n                        {this.renderFormInput()}\n\n                    </div>\n                </div>\n\n                <ModalBootsrap\n                    openclose={this.state.openclose}\n                    close={this.closeModal}\n                    open={this.open}\n                    data={this.state.dataView}\n                />\n\n\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    newEntryTile: {\n        color: \"white\",\n        fontSize: 18,\n        fontweight: \"bold\",\n        textAlign: \"center\",\n        backgroundColor: \"gray\"\n    },\n    tableList: {}\n}"]},"metadata":{},"sourceType":"module"}