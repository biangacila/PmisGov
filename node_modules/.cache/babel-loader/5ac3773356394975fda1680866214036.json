{"ast":null,"code":"import _classCallCheck from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/biangacila/reactprojects/easi-fleet-web/src/container/con-media-streaming.js\";\nimport React from 'react';\nimport ReactHLS from 'react-hls';\nimport ReactFlowPlayer from \"react-flow-player\";\n\nvar MediaStreaming =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MediaStreaming, _React$Component);\n\n  function MediaStreaming(props) {\n    var _this;\n\n    _classCallCheck(this, MediaStreaming);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MediaStreaming).call(this, props));\n    _this.video = window.document.querySelector(\"#videoElement\");\n    return _this;\n  }\n\n  _createClass(MediaStreaming, [{\n    key: \"handleVideo\",\n    value: function handleVideo(stream) {\n      this.video.src = window.URL.createObjectURL(stream);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var video = document.querySelector(\"#videoElement\");\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\n\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({\n          video: true\n        }, this.handleVideo, this.videoError);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        autoPlay: \"true\",\n        id: \"videoElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flowplayer\",\n        \"data-rtmp\": \"rtmp://156.38.129.58/app/live\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        controls: true,\n        autoPlay: true,\n        src: \"rtmp://156.38.129.58/app/live\",\n        width: \"300\",\n        height: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Sorry, your browser doesn't support embedded videos.\")));\n    }\n  }]);\n\n  return MediaStreaming;\n}(React.Component);\n\nexport { MediaStreaming as default };","map":{"version":3,"sources":["/home/biangacila/reactprojects/easi-fleet-web/src/container/con-media-streaming.js"],"names":["React","ReactHLS","ReactFlowPlayer","MediaStreaming","props","video","window","document","querySelector","stream","src","URL","createObjectURL","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","oGetUserMedia","handleVideo","videoError","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;IAEqBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAaC,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,eAA9B,CAAb;AAHc;AAKjB;;;;gCACWC,M,EAAQ;AAChB,WAAKJ,KAAL,CAAWK,GAAX,GAAiBJ,MAAM,CAACK,GAAP,CAAWC,eAAX,CAA2BH,MAA3B,CAAjB;AACH;;;6BAEQ;AAEL,UAAIJ,KAAK,GAAGE,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAZ;AAEAK,MAAAA,SAAS,CAACC,YAAV,GAAyBD,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACE,kBAApC,IAA0DF,SAAS,CAACG,eAApE,IAAuFH,SAAS,CAACI,cAAjG,IAAmHJ,SAAS,CAACK,aAAtJ;;AAEA,UAAIL,SAAS,CAACC,YAAd,EAA4B;AACxBD,QAAAA,SAAS,CAACC,YAAV,CAAuB;AAACT,UAAAA,KAAK,EAAE;AAAR,SAAvB,EAAsC,KAAKc,WAA3C,EAAwD,KAAKC,UAA7D;AACH;;AAGD,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,QAAQ,EAAC,MAAhB;AAAuB,QAAA,EAAE,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAQI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,qBAAU,+BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAO,QAAA,QAAQ,MAAf;AACO,QAAA,QAAQ,EAAE,IADjB;AAEO,QAAA,GAAG,EAAC,+BAFX;AAGO,QAAA,KAAK,EAAC,KAHb;AAIO,QAAA,MAAM,EAAC,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAFJ,CARJ,CADJ;AAqDH;;;;EA3EuCpB,KAAK,CAACqB,S;;SAA7BlB,c","sourcesContent":["import React from 'react';\nimport ReactHLS from 'react-hls';\nimport ReactFlowPlayer from \"react-flow-player\";\n\nexport default class MediaStreaming extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.video = window.document.querySelector(\"#videoElement\");\n\n    }\n    handleVideo(stream) {\n        this.video.src = window.URL.createObjectURL(stream);\n    }\n\n    render() {\n\n        var video = document.querySelector(\"#videoElement\");\n\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\n\n        if (navigator.getUserMedia) {\n            navigator.getUserMedia({video: true}, this.handleVideo, this.videoError);\n        }\n\n\n        return (\n            <div className=\"container\">\n\n                <div>\n                    <video autoPlay=\"true\" id=\"videoElement\">\n                    </video>\n                </div>\n\n\n                <div className=\"flowplayer\" data-rtmp=\"rtmp://156.38.129.58/app/live\">\n\n                    <video controls\n                           autoPlay={true}\n                           src=\"rtmp://156.38.129.58/app/live\"\n                           width=\"300\"\n                           height=\"200\">\n                        Sorry, your browser doesn't support embedded videos.\n                    </video>\n\n                </div>\n\n                {/*<ReactHLS url={\"rtmp://156.38.129.58/app/live\"} autoplay={true}/>\n                <video controls\n                       muted\n                       src=\"rtmp://156.38.129.58/app/live\"\n                       width=\"300\"\n                       height=\"200\">\n                    Sorry, your browser doesn't support embedded videos.\n                </video>*/}\n                {/*<form id=\"player-form\">\n                    <div className=\"input-group url-control\">\n                        <input className=\"form-control\" id=\"player-src\" value=\"\"\n                               placeholder=\"rtmp://www.example.com/live/stream\"\n                               required=\"\" type=\"text\"/>\n                        <span className=\"input-group-btn\">\n<button type=\"submit\" className=\"btn btn-success\" id=\"player-start\">Play</button>\n</span>\n                    </div>\n                </form>\n\n                <div id=\"player-container\">\n                    <object type=\"application/x-shockwave-flash\" id=\"player\" data=\"/player/grindplayer/GrindPlayer.swf\"\n                            style={{\"visibility\": \"visible\"}} width=\"640\" height=\"480\">\n                        <param name=\"allowFullScreen\" value=\"true\" />\n                            <param name=\"allowScriptAccess\" value=\"always\"/>\n                            <param name=\"wmode\" value=\"opaque\"/>\n                            <param name=\"flashvars\"\n                                   value=\"autoPlay=true&amp;src=rtmp://156.38.129.58/app/live&amp;streamType=live&amp;scaleMode=letterbox\"/>\n                    </object>\n                    <div id=\"player-tip\" style={{\"display\": \"none\"}}></div>\n                </div>*/}\n            </div>\n    )\n    }\n    }\n\n"]},"metadata":{},"sourceType":"module"}