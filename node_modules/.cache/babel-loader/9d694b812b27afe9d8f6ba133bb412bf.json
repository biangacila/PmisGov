{"ast":null,"code":"import _regeneratorRuntime from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/biangacila/reactprojects/easi-fleet-web/src/component/common/adding-model.js\";\nimport React from 'react';\nimport { PostRequestHTTP, GetUserToken } from \"../../api/services\";\nimport { cleanInputUsername } from \"../../api/others\";\nimport moment from \"moment\";\n\nvar AddingModel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddingModel, _React$Component);\n\n  function AddingModel(props) {\n    var _this2;\n\n    _classCallCheck(this, AddingModel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AddingModel).call(this, props));\n\n    _this2.renderFormInput = function () {\n      if (typeof _this2.state.MyModel === \"undefined\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, _this2.state.MyModel.map(function (row, index) {\n        return React.createElement(\"div\", {\n          className: \"form-group\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, row.desc), React.createElement(\"input\", {\n          type: row.type,\n          className: \"form-control\",\n          id: row.field,\n          \"aria-describedby\": row.field + \"Help\",\n          placeholder: row.placeholder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n      }));\n    };\n\n    _this2.getModelName = function () {\n      if (typeof _this2.state.ModelName === \"undefined\") {\n        return \"...\";\n      }\n\n      return _this2.state.ModelName;\n    };\n\n    _this2.state = {\n      OrgCode: \"\",\n      List: []\n    };\n    _this2.fetchModelList = _this2.fetchModelList.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(AddingModel, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var user, tmp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState(_objectSpread({}, this.props));\n                user = GetUserToken();\n                tmp = this.state;\n                tmp.OrgCode = user.OrgCode;\n                this.setState(tmp);\n                _context.next = 7;\n                return this.fetchModelList();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"fetchModelList\",\n    value: function () {\n      var _fetchModelList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this, endpoint, data, hub;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this = this;\n                endpoint = \"/crum\";\n                data = this.state;\n                hub = {\n                  OrgCode: this.state.OrgCode,\n                  ServiceName: \"select\",\n                  TableName: this.props.ModelName,\n                  Data: data\n                  /*\n                  type PostRequest struct {\n                      ServiceName     string\n                      TableName       string\n                      ParamUpdate     []src.Params\n                      ParamConditions []src.Params\n                      Data            interface{}\n                  }\n                  type Params struct {\n                      Key      string\n                      Val      interface{}\n                      DataType string\n                  }\n                  */\n\n                };\n                console.log(\"fetchModelList > \", hub, endpoint);\n                _context2.next = 7;\n                return PostRequestHTTP(hub, endpoint, function (data) {\n                  var res = data.RESULT;\n                  console.log(\"submitForm response > \", data);\n\n                  _this.setState({\n                    List: res\n                  });\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function fetchModelList() {\n        return _fetchModelList.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: styles.newEntryTile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Available \", this.getModelName(), \" List\")), React.createElement(\"div\", {\n        className: \"col col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: styles.newEntryTile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"New \", this.getModelName()), this.renderFormInput())));\n    }\n  }]);\n\n  return AddingModel;\n}(React.Component);\n\nexport { AddingModel as default };\nvar styles = {\n  newEntryTile: {\n    color: \"white\",\n    fontSize: 18,\n    fontweight: \"bold\",\n    textAlign: \"center\",\n    backgroundColor: \"gray\"\n  }\n};","map":{"version":3,"sources":["/home/biangacila/reactprojects/easi-fleet-web/src/component/common/adding-model.js"],"names":["React","PostRequestHTTP","GetUserToken","cleanInputUsername","moment","AddingModel","props","renderFormInput","state","MyModel","map","row","index","desc","type","field","placeholder","getModelName","ModelName","OrgCode","List","fetchModelList","bind","setState","user","tmp","_this","endpoint","data","hub","ServiceName","TableName","Data","console","log","res","RESULT","styles","newEntryTile","Component","color","fontSize","fontweight","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {PostRequestHTTP, GetUserToken} from \"../../api/services\";\nimport {cleanInputUsername} from \"../../api/others\";\nimport moment from \"moment\";\n\n\nexport default class AddingModel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            OrgCode:\"\",\n            List:[],\n        }\n        this.fetchModelList = this.fetchModelList.bind(this);\n    }\n\n   async componentDidMount(){\n        this.setState({...this.props});\n        const user  =GetUserToken();\n       let tmp =this.state;\n       tmp.OrgCode = user.OrgCode;\n\n        this.setState(tmp);\n        await this.fetchModelList();\n    }\n\n    async fetchModelList(){\n        const _this =this;\n        let endpoint = \"/crum\";\n\n        let data = this.state;\n        const hub={\n            OrgCode:this.state.OrgCode,\n            ServiceName:\"select\",\n            TableName:this.props.ModelName,\n            Data:data\n        }\n\n        /*\n        type PostRequest struct {\n            ServiceName     string\n            TableName       string\n            ParamUpdate     []src.Params\n            ParamConditions []src.Params\n            Data            interface{}\n        }\n        type Params struct {\n            Key      string\n            Val      interface{}\n            DataType string\n        }\n        */\n\n        console.log(\"fetchModelList > \", hub, endpoint);\n\n        await PostRequestHTTP(hub, endpoint, function (data) {\n            const res = data.RESULT;\n            console.log(\"submitForm response > \", data);\n            _this.setState({List:res})\n\n        });\n    }\n\n    renderFormInput=()=>{\n\n        if(typeof this.state.MyModel ===\"undefined\"){\n            return(<div />)\n        }\n        return(\n            <form >\n                {this.state.MyModel.map((row,index)=>{\n                    return(\n                        <div className=\"form-group\" key={index}>\n                            <label>{row.desc}</label>\n                            <input\n                                type={row.type}\n                                className=\"form-control\"\n                                id={row.field}\n                                aria-describedby={row.field+\"Help\"}\n                                placeholder={row.placeholder}\n                            />\n\n                        </div>\n                    )\n                })}\n            </form>\n        )\n    }\n\n    getModelName=()=>{\n        if(typeof this.state.ModelName ===\"undefined\"){\n            return \"...\"\n        }\n\n        return this.state.ModelName;\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n\n                <p>\n                    {/*JSON.stringify(this.state) */}\n                </p>\n                <div className=\"row\">\n                    <div className=\"col col-lg-6\">\n                        <p style={styles.newEntryTile}>Available {this.getModelName()} List</p>\n                    </div>\n                    <div className=\"col col-lg-4\">\n                        <p style={styles.newEntryTile}>New {this.getModelName()}</p>\n                        {this.renderFormInput()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst styles={\n    newEntryTile:{\n        color:\"white\",\n        fontSize:18,\n        fontweight:\"bold\",\n        textAlign:\"center\",\n        backgroundColor:\"gray\"\n    }\n}"]},"metadata":{},"sourceType":"module"}