{"ast":null,"code":"import _regeneratorRuntime from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/biangacila/reactprojects/easi-fleet-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/biangacila/reactprojects/easi-fleet-web/src/component/common/adding-model.js\";\nimport React from 'react';\nimport { PostRequestHTTP, GetUserToken } from \"../../api/services\";\nimport { cleanInputUsername } from \"../../api/others\";\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport ModalBootsrap from './modal-bootstrap';\n\nvar AddingModel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddingModel, _React$Component);\n\n  function AddingModel(props) {\n    var _this2;\n\n    _classCallCheck(this, AddingModel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AddingModel).call(this, props));\n\n    _this2.getModelName = function () {\n      if (typeof _this2.state.ModelName === \"undefined\") {\n        return \"...\";\n      }\n\n      return _this2.state.ModelName;\n    };\n\n    _this2.handleInput = function (e, key) {\n      _this2.setState(_defineProperty({}, key, e.target.value));\n    };\n\n    _this2.getValue = function (key) {\n      if (typeof _this2.state[key] === \"undefined\") {\n        return \"\";\n      }\n\n      return _this2.state[key];\n    };\n\n    _this2.renderFormInput = function () {\n      if (typeof _this2.state.MyModel === \"undefined\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"form\", {\n        onSubmit: _this2.SubmitNewEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, _this2.state.MyModel.map(function (row, index) {\n        return React.createElement(\"div\", {\n          className: \"form-group\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, row.desc), React.createElement(\"input\", {\n          type: row.type,\n          className: \"form-control\",\n          id: row.field,\n          \"aria-describedby\": row.field + \"Help\",\n          placeholder: row.placeholder,\n          required: row.required,\n          onChange: function onChange(e) {\n            return _this2.handleInput(e, row.field);\n          },\n          value: _this2.getValue(row.field),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }));\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"pull-right\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Submit\"));\n    };\n\n    _this2.viewSelectedModel = function (row) {\n      _this2.setState({\n        openclose: true,\n        dataView: row\n      });\n    };\n\n    _this2.renderList = function () {\n      if (_this2.state.List.length === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Empty List ...\");\n      }\n\n      console.log(\"F! --> \", _this2.state.List.length, \" > \", _this2.props.ListDisplayKey.length);\n      return React.createElement(\"table\", {\n        className: \"table\",\n        style: styles.tableList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, _this2.props.ListDisplayKey.map(function (item, index) {\n        console.log(\"F!!! --> \", item);\n        return React.createElement(\"th\", {\n          key: index + \"#\" + item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, item);\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"\\xA0\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, _this2.state.List.map(function (row, index) {\n        var _React$createElement;\n\n        console.log(\"F!!! --> \", row);\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, _this2.props.ListDisplayKey.map(function (item, index) {\n          var myItem = item.toLocaleLowerCase();\n          return React.createElement(\"td\", {\n            key: index + \"#\" + item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, row[myItem]);\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"a\", (_React$createElement = {\n          onClick: function onClick() {\n            alert(\"List view\");\n          },\n          className: \"glyphicon glyphicon-list clickMe\",\n          style: {\n            fontSize: 24,\n            color: \"blue\",\n            fontWeight: \"bold\"\n          }\n        }, _defineProperty(_React$createElement, \"onClick\", function onClick() {\n          return _this2.viewSelectedModel(row);\n        }), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"a\", {\n          onClick: function onClick() {\n            alert(\"List view\");\n          },\n          className: \"glyphicon glyphicon-minus-sign clickMe\",\n          style: {\n            fontSize: 24,\n            color: \"red\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        })));\n      })));\n    };\n\n    _this2.state = {\n      OrgCode: \"\",\n      List: [],\n      openclose: false\n    };\n    _this2.fetchModelList = _this2.fetchModelList.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.SubmitNewEntry = _this2.SubmitNewEntry.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(AddingModel, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var user, tmp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState(_objectSpread({}, this.props));\n                user = GetUserToken();\n                tmp = this.state;\n                tmp.OrgCode = user.OrgCode;\n                this.setState(tmp);\n                _context.next = 7;\n                return this.fetchModelList();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"fetchModelList\",\n    value: function () {\n      var _fetchModelList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this, endpoint, data, hub;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this = this;\n                endpoint = \"/crum\";\n                data = this.state;\n                hub = {\n                  OrgCode: this.state.OrgCode,\n                  ServiceName: \"select\",\n                  TableName: this.props.ModelName,\n                  Data: data,\n                  ParamUpdate: [],\n                  ParamConditions: []\n                  /*\n                  type PostRequest struct {\n                      ServiceName     string\n                      TableName       string\n                      ParamUpdate     []src.Params\n                      ParamConditions []src.Params\n                      Data            interface{}\n                  }\n                  type Params struct {\n                      Key      string\n                      Val      interface{}\n                      DataType string\n                  }\n                  */\n\n                };\n                console.log(\"fetchModelList > \", hub, endpoint);\n                _context2.next = 7;\n                return PostRequestHTTP(hub, endpoint, function (data) {\n                  var res = data.RESULT;\n                  console.log(\"submitForm response > \", data);\n\n                  _this.setState({\n                    List: res\n                  });\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function fetchModelList() {\n        return _fetchModelList.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"SubmitNewEntry\",\n    value: function () {\n      var _SubmitNewEntry = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var _this, endpoint, user, data, hub;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n                _this = this;\n                endpoint = \"/crum\";\n                user = GetUserToken();\n                data = this.state;\n                data.OrgCode = user.OrgCode;\n                delete data.MyModel;\n                delete data.ModelName;\n                delete data.ListDisplayKey;\n                delete data.List; //delete data.OrgCode;\n\n                hub = {\n                  ServiceName: \"insert\",\n                  TableName: this.props.ModelName,\n                  Data: data\n                };\n                console.log(\"SubmitNewEntry > \", hub, endpoint);\n                _context3.next = 14;\n                return PostRequestHTTP(hub, endpoint, function (data) {\n                  var res = data;\n                  console.log(\"SubmitNewEntry response > \", res);\n                  alert(\"Sucess! Entry add\");\n\n                  _this.fetchModelList();\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function SubmitNewEntry(_x) {\n        return _SubmitNewEntry.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: styles.newEntryTile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Available \", this.getModelName(), \" List\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), this.renderList()), React.createElement(\"div\", {\n        className: \"col col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: styles.newEntryTile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"New \", this.getModelName()), this.renderFormInput())), React.createElement(ModalBootsrap, {\n        openclose: this.state.openclose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddingModel;\n}(React.Component);\n\nexport { AddingModel as default };\nvar styles = {\n  newEntryTile: {\n    color: \"white\",\n    fontSize: 18,\n    fontweight: \"bold\",\n    textAlign: \"center\",\n    backgroundColor: \"gray\"\n  },\n  tableList: {}\n};","map":{"version":3,"sources":["/home/biangacila/reactprojects/easi-fleet-web/src/component/common/adding-model.js"],"names":["React","PostRequestHTTP","GetUserToken","cleanInputUsername","moment","Button","ModalBootsrap","AddingModel","props","getModelName","state","ModelName","handleInput","e","key","setState","target","value","getValue","renderFormInput","MyModel","SubmitNewEntry","map","row","index","desc","type","field","placeholder","required","viewSelectedModel","openclose","dataView","renderList","List","length","console","log","ListDisplayKey","styles","tableList","item","myItem","toLocaleLowerCase","alert","fontSize","color","fontWeight","OrgCode","fetchModelList","bind","user","tmp","_this","endpoint","data","hub","ServiceName","TableName","Data","ParamUpdate","ParamConditions","res","RESULT","preventDefault","newEntryTile","Component","fontweight","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {PostRequestHTTP, GetUserToken} from \"../../api/services\";\nimport {cleanInputUsername} from \"../../api/others\";\nimport moment from \"moment\";\nimport Button from '@material-ui/core/Button';\nimport ModalBootsrap from './modal-bootstrap';\n\nexport default class AddingModel extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            OrgCode:\"\",\n            List:[],\n            openclose:false,\n        }\n        this.fetchModelList = this.fetchModelList.bind(this);\n        this.SubmitNewEntry = this.SubmitNewEntry.bind(this);\n    }\n\n   async componentDidMount(){\n        this.setState({...this.props});\n        const user  =GetUserToken();\n       let tmp =this.state;\n       tmp.OrgCode = user.OrgCode;\n        this.setState(tmp);\n        await this.fetchModelList();\n    }\n\n    async fetchModelList(){\n        const _this =this;\n        let endpoint = \"/crum\";\n\n        let data = this.state;\n        const hub={\n            OrgCode:this.state.OrgCode,\n            ServiceName:\"select\",\n            TableName:this.props.ModelName,\n            Data:data,\n            ParamUpdate\t:[],\n            ParamConditions\t:[]\n        }\n\n        /*\n        type PostRequest struct {\n            ServiceName     string\n            TableName       string\n            ParamUpdate     []src.Params\n            ParamConditions []src.Params\n            Data            interface{}\n        }\n        type Params struct {\n            Key      string\n            Val      interface{}\n            DataType string\n        }\n        */\n\n        console.log(\"fetchModelList > \", hub, endpoint);\n\n        await PostRequestHTTP(hub, endpoint, function (data) {\n            const res = data.RESULT;\n            console.log(\"submitForm response > \", data);\n            _this.setState({List:res})\n\n        });\n    }\n\n    async SubmitNewEntry(e){\n        e.preventDefault();\n        const _this =this;\n        let endpoint = \"/crum\";\n\n        const user  =GetUserToken();\n\n        let data = this.state;\n        data.OrgCode = user.OrgCode;\n        delete data.MyModel;\n        delete data.ModelName;\n        delete data.ListDisplayKey;\n        delete data.List;\n        //delete data.OrgCode;\n\n\n        const hub={\n            ServiceName:\"insert\",\n            TableName:this.props.ModelName,\n            Data:data,\n\n        }\n\n        console.log(\"SubmitNewEntry > \", hub, endpoint);\n\n        await PostRequestHTTP(hub, endpoint, function (data) {\n            const res = data;\n            console.log(\"SubmitNewEntry response > \", res);\n            alert(\"Sucess! Entry add\");\n            _this.fetchModelList();\n\n        });\n    }\n    getModelName=()=>{\n        if(typeof this.state.ModelName ===\"undefined\"){\n            return \"...\"\n        }\n\n        return this.state.ModelName;\n    }\n    handleInput=(e,key)=>{\n        this.setState({[key]:e.target.value});\n    }\n    getValue=(key)=>{\n        if(typeof this.state[key] ===\"undefined\"){\n            return \"\"\n        }\n        return this.state[key];\n    }\n    renderFormInput=()=>{\n\n        if(typeof this.state.MyModel ===\"undefined\"){\n            return(<div />)\n        }\n        return(\n            <form onSubmit={this.SubmitNewEntry}>\n                {this.state.MyModel.map((row,index)=>{\n                    return(\n                        <div className=\"form-group\" key={index}>\n                            <label>{row.desc}</label>\n                            <input\n                                type={row.type}\n                                className=\"form-control\"\n                                id={row.field}\n                                aria-describedby={row.field+\"Help\"}\n                                placeholder={row.placeholder}\n                                required={row.required}\n                                onChange={(e)=>this.handleInput(e,row.field)}\n                                value={this.getValue(row.field)}\n                            />\n\n                        </div>\n                    )\n                })}\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className=\"pull-right\"\n                    type=\"submit\"\n                >\n                    Submit\n                </Button>\n            </form>\n        )\n    }\n    viewSelectedModel=(row)=>{\n        this.setState({openclose:true,dataView:row});\n    }\n    renderList=()=>{\n\n\n        if(this.state.List.length ===0){\n            return(\n                <p>Empty List ...</p>\n            )\n        }\n\n        console.log(\"F! --> \",this.state.List.length,\" > \",this.props.ListDisplayKey.length);\n\n        return(\n            <table className={\"table\"} style={styles.tableList}>\n                <thead>\n\n                    <tr>\n                    {this.props.ListDisplayKey.map((item,index)=>{\n                        console.log(\"F!!! --> \",item);\n                        return(\n                            <th key={index+\"#\"+item}>{item}</th>\n                        )\n                    })}\n                    <th>&nbsp;</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {this.state.List.map((row,index)=>{\n                    console.log(\"F!!! --> \",row);\n\n                    return(\n                        <tr>\n                            {this.props.ListDisplayKey.map((item,index)=>{\n                                const myItem = item.toLocaleLowerCase();\n                                return(\n                                    <td key={index+\"#\"+item}>{row[myItem]}</td>\n                                )\n                            })}\n                            <td>\n                                <a onClick={()=>{\n                                    alert(\"List view\");\n                                }} className=\"glyphicon glyphicon-list clickMe\"\n                                   style={{fontSize:24,color:\"blue\",fontWeight:\"bold\"}}\n                                   onClick={()=>this.viewSelectedModel(row)}\n                                />\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <a onClick={()=>{\n                                    alert(\"List view\");\n                                }} className=\"glyphicon glyphicon-minus-sign clickMe\"\n                                   style={{fontSize:24,color:\"red\",fontWeight:\"bold\"}}\n                                />\n                            </td>\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n\n                <p>\n                    {/*JSON.stringify(this.state) */}\n                </p>\n                <div className=\"row\">\n                    <div className=\"col col-lg-6\">\n                        <p style={styles.newEntryTile}>Available {this.getModelName()} List</p>\n                        <br/>\n                        {this.renderList()}\n                    </div>\n                    <div className=\"col col-lg-4\">\n                        <p style={styles.newEntryTile}>New {this.getModelName()}</p>\n                        {this.renderFormInput()}\n\n                    </div>\n                </div>\n\n                <ModalBootsrap\n                    openclose={this.state.openclose}\n                />\n\n\n\n            </div>\n        )\n    }\n}\n\nconst styles={\n    newEntryTile:{\n        color:\"white\",\n        fontSize:18,\n        fontweight:\"bold\",\n        textAlign:\"center\",\n        backgroundColor:\"gray\"\n    },\n    tableList:{\n\n    }\n}"]},"metadata":{},"sourceType":"module"}