{"ast":null,"code":"import _defineProperty from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/biangacila/reactprojects/PmisGov/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/biangacila/reactprojects/PmisGov/src/component/employee/filtering.js\";\nimport React from 'react';\nimport { PostMainPMIS, PostGovPMIS, PostRecordPMIS } from '../../api/auth';\n\nvar FilteringContract =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilteringContract, _React$Component);\n\n  function FilteringContract(props) {\n    var _this2;\n\n    _classCallCheck(this, FilteringContract);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(FilteringContract).call(this, props));\n    _this2.fetchContract =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this, hub, endpoint;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this = _assertThisInitialized(_assertThisInitialized(_this2));\n              hub = {};\n              endpoint = \"/api/contract/list\"; // \"/api/contracts/information/list\n\n              _context.next = 5;\n              return PostMainPMIS(hub, endpoint, function (data) {\n                var lsProvince = {};\n\n                for (var i in data) {\n                  var row = data[i];\n                  lsProvince[row.Province] = true;\n                }\n\n                var ls = [];\n\n                for (var _i in lsProvince) {\n                  ls.push(_i);\n                }\n\n                _this.setState({\n                  ListContract: data,\n                  ComboProvince: ls\n                });\n\n                console.log(\":> ListContract > \", ls, data);\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this2.handleInput = function (e, key) {\n      _this2.setState(_defineProperty({}, key, e.target.value));\n\n      _this2.props.handleInput(e, key);\n    };\n\n    _this2.getValue = function (key) {\n      if (typeof _this2.state[key] === \"undefined\") {\n        return \"\";\n      }\n\n      return _this2.state[key];\n    };\n\n    _this2.renderProvince = function () {\n      console.log(\":> renderProvince > \", _this2.state.ComboProvince.length);\n\n      if (_this2.state.ComboProvince.length === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Waiting for province list ...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Province\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.handleInput(e, \"province\");\n        },\n        value: _this2.getValue(\"province\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"--Select Province --\"), _this2.state.ComboProvince.map(function (item, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, item);\n      })));\n    };\n\n    _this2.renderMunicipality = function () {\n      if (_this2.state.province === \"\") {\n        return \"\";\n      }\n\n      var municipalities = [];\n      var ls = {};\n\n      for (var i in _this2.state.ListContract) {\n        var row = _this2.state.ListContract[i]; // Municipality\n\n        if (row.Province === _this2.state.province) {\n          ls[row.Municipality] = true;\n        }\n      }\n\n      for (var _i2 in ls) {\n        municipalities.push(_i2);\n      }\n\n      if (municipalities.length === 0) {\n        return \"\";\n      }\n\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Municipality\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.handleInput(e, \"municipality\");\n        },\n        value: _this2.getValue(\"municipality\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"--Select Province --\"), municipalities.map(function (item, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, item);\n      })));\n    };\n\n    _this2.renderCompany = function () {\n      if (_this2.state.province === \"\") {\n        return \"\";\n      }\n\n      if (_this2.state.municipality === \"\") {\n        return \"\";\n      }\n\n      var companies = [];\n      var ls = {};\n\n      for (var i in _this2.state.ListContract) {\n        var row = _this2.state.ListContract[i]; // Municipality\n\n        if (row.Province === _this2.state.province && row.Municipality === _this2.state.municipality) {\n          ls[row.Company] = true;\n        }\n      }\n\n      for (var _i3 in ls) {\n        companies.push(_i3);\n      }\n\n      if (companies.length === 0) {\n        return \"\";\n      }\n\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Company\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.handleInput(e, \"company\");\n        },\n        value: _this2.getValue(\"company\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"--Select Province --\"), companies.map(function (item, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, item);\n      })));\n    };\n\n    _this2.renderContract = function () {\n      if (_this2.state.province === \"\") {\n        return \"\";\n      }\n\n      if (_this2.state.municipality === \"\") {\n        return \"\";\n      }\n\n      if (_this2.state.company === \"\") {\n        return \"\";\n      }\n\n      var contracts = [];\n      var ls = {};\n\n      for (var i in _this2.state.ListContract) {\n        var row = _this2.state.ListContract[i]; // Municipality\n\n        if (row.Province === _this2.state.province && row.Municipality === _this2.state.municipality && row.Company === _this2.state.company) {\n          ls[row.Name] = true;\n        }\n      }\n\n      for (var _i4 in ls) {\n        contracts.push(_i4);\n      }\n\n      if (contracts.length === 0) {\n        return \"\";\n      }\n\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Contract\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        required: true,\n        onChange: function onChange(e) {\n          return _this2.handleInput(e, \"contact\");\n        },\n        value: _this2.getValue(\"contact\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"--Select Contract --\"), contracts.map(function (item, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, item);\n      })));\n    };\n\n    _this2.submitSearchData = function () {\n      var _this = _assertThisInitialized(_assertThisInitialized(_this2));\n\n      var validation = function validation() {\n        if (_this.state.province === \"\") {\n          return false;\n        }\n\n        if (_this.state.municipality === \"\") {\n          return false;\n        }\n\n        if (_this.state.company === \"\") {\n          return false;\n        }\n\n        if (_this.state.contract === \"\") {\n          return false;\n        }\n\n        return true;\n      };\n\n      if (!validation()) {\n        alert(\"! Please select all the box before process\");\n      }\n\n      _this2.props.handleInput({\n        province: _this2.state.province,\n        municipality: _this2.state.municipality,\n        company: _this2.state.company,\n        contract: _this2.state.contract\n      });\n    };\n\n    _this2.renderButtons = function () {\n      if (_this2.state.province === \"\") {\n        return \"\";\n      }\n\n      if (_this2.state.municipality === \"\") {\n        return \"\";\n      }\n\n      if (_this2.state.company === \"\") {\n        return \"\";\n      }\n\n      if (_this2.state.contract === \"\") {\n        return \"\";\n      }\n\n      return React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          _this2.submitSearchData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Search Data\");\n    };\n\n    _this2.state = {\n      province: \"\",\n      municipality: \"\",\n      company: \"\",\n      contract: \"\",\n      ListContract: [],\n      ListOrganization: [],\n      ComboProvince: []\n    };\n    return _this2;\n  }\n\n  _createClass(FilteringContract, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.fetchContract();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"filtering request\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, this.renderProvince()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, this.renderMunicipality()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, this.renderCompany()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, this.renderContract()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FilteringContract;\n}(React.Component);\n\nexport { FilteringContract as default };","map":{"version":3,"sources":["/home/biangacila/reactprojects/PmisGov/src/component/employee/filtering.js"],"names":["React","PostMainPMIS","PostGovPMIS","PostRecordPMIS","FilteringContract","props","fetchContract","_this","hub","endpoint","data","lsProvince","i","row","Province","ls","push","setState","ListContract","ComboProvince","console","log","handleInput","e","key","target","value","getValue","state","renderProvince","length","map","item","index","renderMunicipality","province","municipalities","Municipality","renderCompany","municipality","companies","Company","renderContract","company","contracts","Name","submitSearchData","validation","contract","alert","renderButtons","ListOrganization","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {PostMainPMIS, PostGovPMIS, PostRecordPMIS} from '../../api/auth';\n\nexport default class FilteringContract extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            province: \"\",\n            municipality: \"\",\n            company: \"\",\n            contract: \"\",\n            ListContract: [],\n            ListOrganization: [],\n            ComboProvince: [],\n        }\n    }\n\n    async componentDidMount() {\n        await this.fetchContract();\n    }\n\n    fetchContract = async () => {\n        let _this = this;\n\n        let hub = {}\n        const endpoint = \"/api/contract/list\"; // \"/api/contracts/information/list\n        await PostMainPMIS(hub, endpoint, function (data) {\n\n            let lsProvince = {};\n            for (let i in data) {\n                const row = data[i];\n                lsProvince[row.Province] = true;\n            }\n            let ls = [];\n            for (let i in lsProvince) {\n                ls.push(i)\n            }\n            _this.setState({ListContract: data, ComboProvince: ls});\n\n            console.log(\":> ListContract > \", ls, data);\n        })\n\n    }\n    /*fetchOrganization = async () => {\n        let _this = this;\n\n        let hub = {}\n        const endpoint = \"/api/organisation/list\";\n        await PostMainPMIS(hub, endpoint, function (data) {\n            console.log(\":> ListOrganization > \", data);\n            _this.setState({ListOrganization: data})\n        })\n\n    }*/\n\n    handleInput=(e,key)=>{\n        this.setState({[key]:e.target.value});\n        this.props.handleInput(e,key);\n    }\n    getValue=(key)=>{\n        if(typeof this.state[key] ===\"undefined\"){\n            return \"\";\n        }\n        return this.state[key]\n    }\n\n    renderProvince =()=> {\n        console.log(\":> renderProvince > \", this.state.ComboProvince.length );\n        if(this.state.ComboProvince.length === 0){\n            return(\n                <p>Waiting for province list ...</p>\n            )\n        }\n\n        return(\n            <div className=\"form-group\">\n                <label>Province</label>\n                <select\n                    className=\"form-control\"\n                    required={true}\n                    onChange={(e) => this.handleInput(e, \"province\")}\n                    value={this.getValue(\"province\")}\n                >\n                    <option>--Select Province --</option>\n                    {this.state.ComboProvince.map((item,index)=>{\n                        return(\n                            <option key={index} value={item}>{item}</option>\n                        )\n                    })}\n                </select>\n\n            </div>\n        )\n    }\n\n    renderMunicipality=()=>{\n        if(this.state.province ===\"\"){\n            return (\"\")\n        }\n        let municipalities = [];\n        let ls  = {};\n        for(let i in this.state.ListContract){\n            const row =this.state.ListContract[i]; // Municipality\n            if(row.Province ===this.state.province){\n                ls[row.Municipality] = true;\n            }\n        }\n\n        for(let i in ls){\n            municipalities.push(i)\n        }\n\n        if(municipalities.length ===0){\n            return \"\"\n        }\n\n        return(\n            <div className=\"form-group\">\n                <label>Municipality</label>\n                <select\n                    className=\"form-control\"\n                    required={true}\n                    onChange={(e) => this.handleInput(e, \"municipality\")}\n                    value={this.getValue(\"municipality\")}\n                >\n                    <option>--Select Province --</option>\n                    {municipalities.map((item,index)=>{\n                        return(\n                            <option key={index} value={item}>{item}</option>\n                        )\n                    })}\n                </select>\n\n            </div>\n        )\n\n    }\n\n    renderCompany=()=>{\n\n        if(this.state.province ===\"\"){\n            return (\"\")\n        }\n        if(this.state.municipality ===\"\"){\n            return (\"\")\n        }\n\n        let companies = [];\n        let ls  = {};\n        for(let i in this.state.ListContract){\n            const row =this.state.ListContract[i]; // Municipality\n            if(row.Province ===this.state.province && row.Municipality ===this.state.municipality){\n                ls[row.Company] = true;\n            }\n        }\n\n        for(let i in ls){\n            companies.push(i)\n        }\n\n        if(companies.length ===0){\n            return \"\"\n        }\n\n        return(\n            <div className=\"form-group\">\n                <label>Company</label>\n                <select\n                    className=\"form-control\"\n                    required={true}\n                    onChange={(e) => this.handleInput(e, \"company\")}\n                    value={this.getValue(\"company\")}\n                >\n                    <option>--Select Province --</option>\n                    {companies.map((item,index)=>{\n                        return(\n                            <option key={index} value={item}>{item}</option>\n                        )\n                    })}\n                </select>\n\n            </div>\n        )\n\n    }\n\n    renderContract=()=>{\n\n        if(this.state.province ===\"\"){\n            return (\"\")\n        }\n        if(this.state.municipality ===\"\"){\n            return (\"\")\n        }\n        if(this.state.company ===\"\"){\n            return (\"\")\n        }\n\n        let contracts = [];\n        let ls  = {};\n        for(let i in this.state.ListContract){\n            const row =this.state.ListContract[i]; // Municipality\n            if(\n                row.Province ===this.state.province &&\n                row.Municipality ===this.state.municipality &&\n                row.Company ===this.state.company\n            ){\n                ls[row.Name] = true;\n            }\n        }\n\n        for(let i in ls){\n            contracts.push(i)\n        }\n\n        if(contracts.length ===0){\n            return \"\"\n        }\n\n        return(\n            <div className=\"form-group\">\n                <label>Contract</label>\n                <select\n                    className=\"form-control\"\n                    required={true}\n                    onChange={(e) => this.handleInput(e, \"contact\")}\n                    value={this.getValue(\"contact\")}\n                >\n                    <option>--Select Contract --</option>\n                    {contracts.map((item,index)=>{\n                        return(\n                            <option key={index} value={item}>{item}</option>\n                        )\n                    })}\n                </select>\n\n            </div>\n        )\n\n    }\n\n    submitSearchData=()=>{\n        let _this = this;\n        const validation=()=>{\n            if(_this.state.province ===\"\"){\n                return false\n            }\n            if(_this.state.municipality ===\"\"){\n                return false\n            }\n            if(_this.state.company ===\"\"){\n                return false\n            }\n            if(_this.state.contract ===\"\"){\n                return false\n            }\n\n            return true\n        }\n\n        if(!validation()){\n            alert(\"! Please select all the box before process\");\n        }\n\n        this.props.handleInput({\n            province: this.state.province,\n            municipality: this.state.municipality,\n            company: this.state.company,\n            contract: this.state.contract,\n        })\n    }\n\n    renderButtons=()=>{\n        if(this.state.province ===\"\"){\n            return (\"\")\n        }\n        if(this.state.municipality ===\"\"){\n            return (\"\")\n        }\n        if(this.state.company ===\"\"){\n            return (\"\")\n        }\n        if(this.state.contract ===\"\"){\n            return (\"\")\n        }\n\n        return(\n            <button className=\"btn btn-primary\" onClick={()=>{this.submitSearchData()}}>\n                Search Data\n            </button>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n                <h2>filtering request</h2>\n                <div>\n                    {this.renderProvince()}\n                </div>\n                <div>\n                    {this.renderMunicipality()}\n                </div>\n                <div>\n                    {this.renderCompany()}\n                </div>\n                <div>\n                    {this.renderContract()}\n                </div>\n                <div>\n                    <button></button>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}